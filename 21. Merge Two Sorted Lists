isme 2no list ke value ko nekal ke 1 array me dallo 
phir us aary ko sort kardo 
phir uss array ke value ke hesab se linklist baando uske wo value dal ke return karke dedo

TC-> O(N)
SC-> O(N)

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        vector<int>arr;

        ListNode* temp = list1;
        while(temp != NULL){
            arr.push_back(temp->val);
            temp = temp ->next;
        }
        temp = list2;
        while(temp != NULL){
            arr.push_back(temp->val);
            temp = temp ->next;
        }
        sort(arr.begin(), arr.end());

        ListNode* xnode = new ListNode(0);
        ListNode* newnode = xnode;

        for(auto x : arr){
            newnode -> next = new ListNode(x);
            newnode = newnode->next;
        }
        return xnode -> next;
    }
};
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ye optiomize soltution hai isme direct merge sort apply kardo 1 dumynode banalo or dono list ke value ko componare karta ja jo kam ho usko dummy nod me jorte jao tumhara sorteed list banta jayega 
last me jo list ka value bach jaye usko bhi jor dena or return kar dena
TC->O(N)
SC->(O(1)

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* left = list1;
        ListNode* right = list2;
        ListNode* xnode = new ListNode(0);
        ListNode* temp = xnode;

        while(left != NULL && right != NULL){
            if(left->val < right->val){
                temp->next = left;
                left = left->next;
            }
            else{
                temp->next = right;
                right= right ->next;
            }
            temp = temp->next;
        }
        
        if(left != NULL){
            temp ->next = left;
            left = left->next;
            temp = temp->next;
        }

        if(right != NULL){
            temp->next = right;
            right = right ->next;
            temp = temp->next;
        }

        return xnode->next;
    }
};
